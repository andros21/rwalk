---
name: flyio deploy

"on":
  push:
    branches:
      - flyio

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: flyio deploy
    runs-on: ubuntu-latest
    environment:
      name: flyio
      url: https://rwalk.fly.dev
    steps:
      - name: checkout project
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - name: check cosign version
        id: cosign-version
        run: |
          LATEST=$(curl -sL https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r ".tag_name")
          echo "cosign version: ${LATEST}"
          echo "latest=${LATEST}" >> $GITHUB_OUTPUT
      - name: check cosign cache
        uses: actions/cache@c1a5de879eb890d062a85ee0252d6036480b1fe2
        id: cosign-cache
        with:
          path: ~/.cosign
          key: ${{ runner.os }}-cosign-${{ steps.cosign-version.outputs.latest }}
      - name: add cosign to path
        if: steps.cosign-cache.outputs.cache-hit == 'true'
        run: |
          echo "HOME=$HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/.cosign" >> $GITHUB_ENV
      - name: install cosign
        if: steps.cosign-cache.outputs.cache-hit != 'true'
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b
        with:
          cosign-release: ${{ steps.cosign-version.outputs.latest }}
      - name: verify rwalk image
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign verify ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:master | jq
      - name: flyio deploy
        uses: superfly/flyctl-actions@adbb124b95f2e47566253d95497432c27f4bdd70
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        with:
          args: "deploy --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:master"
