---
name: build rwalk

"on":
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - LICENSE
      - README.md
      - fly.toml
      - .github/workflows/build.yml
      - .github/workflows/deploy.yml
      - .github/workflows/vuln.yml
      - .github/dependabot.yml

permissions:
  contents: read
  id-token: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BASE_IMAGE: cgr.dev/chainguard/python

jobs:
  build:
    name: build rwalk
    runs-on: ubuntu-latest
    steps:
      - name: checkout project
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: get base image
        id: base
        run: |
          set -x
          DIGEST="$(awk -F '=' '/ARG DIGEST/ {print $2}' Dockerfile)"
          echo "Base image: ${BASE_IMAGE}@${DIGEST}"
          echo "image=${BASE_IMAGE}@${DIGEST}" >> $GITHUB_OUTPUT
      - name: setup python
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435
        with:
          python-version: 3.9
      - name: install poetry
        uses: snok/install-poetry@d45b6d76012debf457ab49dffc7fb7b2efe8071d
        with:
          virtualenvs-create: false
      - name: export requirements.txt
        run: |
          poetry export --without-hashes -o requirements.txt
      - name: install cosign
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b
      - name: verify base image signature
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign verify "${{ steps.base.outputs.image }}" | jq
      - name: verify base image vuln
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          set -x
          CVE_COUNT=(-1 -1)
          CVE_COUNT=($(cosign download attestation "${{ steps.base.outputs.image }}" \
            | jq -r .payload | base64 -d \
            | jq '.predicate.scanner.result.runs[0].results | length' | xargs))
          echo "TRIVY_COUNT: ${CVE_COUNT[0]}"
          echo "GRYPE_COUNT: ${CVE_COUNT[1]}"
      - name: login ghcr.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build rwalk (devel)
        id: docker
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel
          # action fail with
          # ERROR: attestations are not supported by the current buildkitd
          #sbom: true
      - name: smoke test
        run: |
          set -x
          docker run --rm --detach -p 8080:8080 --name smoke_rwalk \
            "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.docker.outputs.digest }}"
          sleep 3
          curl -X GET http://localhost:8080
          docker logs smoke_rwalk
          docker stop smoke_rwalk
      - name: cosign rwalk
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.docker.outputs.digest }}"
      - name: install crane
        uses: imjasonh/setup-crane@e82f1b9a8007d399333baba4d75915558e9fb6a4
      - name: tag rwalk (latest)
        run: |
          crane tag "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel" latest
