---
name: build rwalk

"on":
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - LICENSE
      - README.md
      - fly.toml
      - .github/workflows/build.yml
      - .github/workflows/deploy.yml
      - .github/workflows/digesta.yml
      - .github/dependabot.yml
      - .github/CODEOWNERS

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: build rwalk
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.docker.outputs.digest }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: setup python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.9'
      - name: install poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        with:
          virtualenvs-create: false
      - name: export requirements.txt
        run: |
          poetry install --no-root --without="main"
          poetry export -o requirements.txt
      - name: install cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159
      - name: verify base images
        run: |
          cosign dockerfile verify \
            --certificate-identity \
            'https://github.com/chainguard-images/images/.github/workflows/release.yaml@refs/heads/main' \
            --certificate-oidc-issuer 'https://token.actions.githubusercontent.com' \
            Dockerfile | jq .
      - name: docker buildx
        id: buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435
      - name: login ghcr.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ env.IMAGE_NAME }}
      - name: build rwalk (devel)
        id: docker
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel
          labels: ${{ steps.meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }}
          sbom: true
          provenance: true
      - name: smoke test
        run: |
          set -x
          docker run --rm --detach -p 8080:8080 --name smoke_rwalk \
            "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.docker.outputs.digest }}"
          sleep 3
          curl -X GET http://localhost:8080 || (docker logs smoke_rwalk && exit 1)
          docker logs smoke_rwalk
          docker stop smoke_rwalk
  cosign:
    name: cosign rwalk
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    needs: build
    steps:
      - name: install cosign
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159
      - name: login ghcr.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: cosign rwalk
        run: |
          cosign sign -y "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ needs.build.outputs.digest }}"
      - name: install crane
        uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e
      - name: tag rwalk (latest)
        run: |
          crane tag "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel" latest
