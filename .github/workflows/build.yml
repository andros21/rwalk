---
name: build rwalk

"on":
  push:
    branches:
      - master
    paths-ignore:
      - LICENSE
      - README.md
      - fly.toml
      - .github/workflows/build.yml
      - .github/workflows/deploy.yml
      - .github/dependabot.yml

permissions:
  contents: read
  id-token: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: build rwalk
    runs-on: ubuntu-latest
    steps:
      - name: checkout project
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - name: setup python
        uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984
        with:
          python-version: 3.9
      - name: install poetry
        uses: snok/install-poetry@d45b6d76012debf457ab49dffc7fb7b2efe8071d
        with:
          virtualenvs-create: false
      - name: export requirements.txt
        run: |
          poetry export --without-hashes -o requirements.txt
      - name: check cosign version
        id: cosign-version
        run: |
          LATEST=$(curl -sL https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r ".tag_name")
          echo "cosign version: ${LATEST}"
          echo "latest=${LATEST}" >> $GITHUB_OUTPUT
      - name: check cosign cache
        uses: actions/cache@56461b9eb0f8438fd15c7a9968e3c9ebb18ceff1
        id: cosign-cache
        with:
          path: ~/.cosign
          key: ${{ runner.os }}-cosign-${{ steps.cosign-version.outputs.latest }}
      - name: add cosign to path
        if: steps.cosign-cache.outputs.cache-hit == 'true'
        run: |
          echo "HOME=$HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/.cosign" >> $GITHUB_ENV
      - name: install cosign
        if: steps.cosign-cache.outputs.cache-hit != 'true'
        uses: sigstore/cosign-installer@7cc35d7fdbe70d4278a0c96779081e6fac665f88
        with:
          cosign-release: ${{ steps.cosign-version.outputs.latest }}
      - name: verify python apko image
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign verify cgr.dev/chainguard/python:latest-glibc | jq
      - name: login ghcr.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: extract metadata
        id: meta
        uses: docker/metadata-action@12cce9efe0d49980455aaaca9b071c0befcdd702
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: build-and-push rwalk
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: cosign rwalk
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:master
